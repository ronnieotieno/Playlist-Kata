plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "dev.challenge.playlistcodekata"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def room = "2.2.6"
    def dagger = "2.33"
    def support = "2.27"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    implementation('androidx.fragment:fragment-ktx:1.3.2') {
        ("Provide lifecycle scope for courotine as well as livedata")
    }

    implementation('androidx.legacy:legacy-support-v4:1.0.0') {
        because("Dagger2 needs legacy code, the project is in androidX but Dagger2 uses support libraries")
    }

    //Dagger2
    implementation("com.google.dagger:dagger:$dagger") {
        because("Dagger2 for dependency injection")
    }
    implementation "com.google.dagger:dagger-android-support:$support"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$support"

    //Room Database
    implementation("androidx.room:room-runtime:$room") {
        because("Room library provides abstraction layer for sqlite db")
    }
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"


}